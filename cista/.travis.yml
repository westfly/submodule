dist: xenial
language: minimal
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-xenial-7
    packages:
      - build-essential
      - cmake
      - clang-7
      - g++-9
      - libc++-7-dev
      - libc++abi-7-dev
      - ninja-build
      - lcov
env:
  - COVERAGE=Off  BUILD_TYPE=Release LDFLAGS="-stdlib=libc++" CC="clang-7" CXX="clang++-7" CXXFLAGS="-stdlib=libc++ -D_LIBCPP_VERSION=1"
  - COVERAGE=Off  BUILD_TYPE=Debug   LDFLAGS="-stdlib=libc++" CC="clang-7" CXX="clang++-7" CXXFLAGS="-stdlib=libc++ -D_LIBCPP_VERSION=1 -fno-omit-frame-pointer -fsanitize=address"
  - COVERAGE=Off  BUILD_TYPE=Release LDFLAGS="-stdlib=libc++" CC="clang-7" CXX="clang++-7" CXXFLAGS="-stdlib=libc++ -D_LIBCPP_VERSION=1 -fno-omit-frame-pointer -fsanitize=address"
  - COVERAGE=Off  BUILD_TYPE=Release                          CC="gcc-9"   CXX="g++-9"
  - COVERAGE=Off  BUILD_TYPE=Debug                            CC="gcc-9"   CXX="g++-9"     CXXFLAGS="-fno-omit-frame-pointer -fsanitize=address"
  # - COVERAGE=On   BUILD_TYPE=Debug                            CC="gcc-9"   CXX="g++-9"
before_install:
  - |
    if [ $COVERAGE == "On" ]; then
      gem install coveralls-lcov
    fi
script:
  - mkdir build && cd build
  - cmake -GNinja -DCISTA_COVERAGE=$COVERAGE -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
# - ninja cista-format-check
  - ninja cista-test
  - |
    if [ $COVERAGE == "On" ]; then
      ninja cista-coverage
    else
      ./cista-test
    fi
after_success:
  - |
    if [ $COVERAGE == "On" ]; then
      coveralls-lcov cov.info
    fi
